<controlzEx:WindowChromeWindow x:Class="ControlzEx.Showcase.MainWindow"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
                               xmlns:controlzEx="urn:controlzex"
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                               xmlns:local="clr-namespace:ControlzEx.Showcase"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                               xmlns:system="clr-namespace:System;assembly=mscorlib"
                               xmlns:views="clr-namespace:ControlzEx.Showcase.Views"
                               xmlns:converters="clr-namespace:ControlzEx.Showcase.Converters"
                               x:Name="Window"
                               Title="ControlzEx.Showcase"
                               Width="800"
                               Height="800"
                               MinWidth="80"
                               MinHeight="60"
                               FlowDirection="LeftToRight"
                               GlowColor="{DynamicResource ControlzEx.Colors.AccentBaseColor}"
                               CaptionColor="{DynamicResource ControlzEx.Colors.AccentBaseColor}"
                               NCActiveBrush="{Binding CaptionColor, RelativeSource={RelativeSource Self}, Converter={x:Static converters:ToBrushConverter.Instance}}"
                               NCNonActiveBrush="{Binding Source={x:Static SystemColors.WindowFrameBrush}}"
                               NonActiveGlowColor="LightGray"
                               WindowStartupLocation="CenterScreen"
                               WindowState="Normal"
                               SizeToContent="Manual"
                               Topmost="False"
                               controlzEx:WindowBackdropManager.BackdropType="None"
                               mc:Ignorable="d">
    <controlzEx:WindowChromeWindow.Resources>
        <ObjectDataProvider x:Key="ResizeModeEnumValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type ResizeMode}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="ResizeMode" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="WindowStyleEnumValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type WindowStyle}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="WindowStyle" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="CornerPreferenceEnumValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type controlzEx:WindowCornerPreference}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="controlzEx:WindowCornerPreference" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="WindowBackdropTypeEnumValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type controlzEx:WindowBackdropType}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="controlzEx:WindowBackdropType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        
        <ObjectDataProvider x:Key="DockEnumValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type Dock}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Dock" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </controlzEx:WindowChromeWindow.Resources>

    <Grid x:Name="ContentGrid" SnapsToDevicePixels="True">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0"
                  controlzEx:WindowChrome.IsHitTestVisibleInChrome="False"
                  controlzEx:NonClientControlProperties.HitTestResult="CAPTION"
                  MouseLeftButtonDown="TitleBarGrid_OnMouseLeftButtonDown"
                  MouseRightButtonUp="TitleBarGrid_OnMouseRightButtonUp">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <DockPanel Grid.ColumnSpan="10"
                           LastChildFill="True">
                    <Border Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            DockPanel.Dock="Right"
                            Width="{Binding ElementName=Window, Path=CaptionButtonsSize.Width}"
                            Height="{Binding ElementName=Window, Path=CaptionButtonsSize.Height}"
                            Visibility="{Binding ElementName=Window, Path=UseNativeCaptionButtons, Converter={x:Static converters:BoolToVisibilityConverter.Instance}}"
                            VerticalAlignment="Top" />
                    <Border Background="{Binding ElementName=Window, Path=NCCurrentBrush}" />
                </DockPanel>

                <ProgressBar Grid.Column="0" Width="20" IsIndeterminate="True" />

                <TextBlock Grid.Column="1"
                           Margin="4 0 0 0"
                           HorizontalAlignment="Center"
                           Text="Use GridSplitter below to move content above titlebar"
                           TextTrimming="CharacterEllipsis" />

                <Border Grid.Column="2"
                        Background="Transparent"
                        BorderBrush="Transparent" 
                        BorderThickness="0"
                        Width="{Binding ElementName=Window, Path=CaptionButtonsSize.Width}"
                        Height="{Binding ElementName=Window, Path=CaptionButtonsSize.Height}"
                        Visibility="{Binding ElementName=Window, Path=UseNativeCaptionButtons, Converter={x:Static converters:BoolToVisibilityConverter.Instance}}" />

                <UniformGrid Grid.Column="2" Columns="3"
                             Visibility="{Binding ElementName=Window, Path=UseNativeCaptionButtons, Converter={x:Static converters:BoolToVisibilityConverter.Instance}, ConverterParameter=True}">
                    <Button Style="{StaticResource WindowTitleBarButton}"
                            IsEnabled="{Binding IsEnabled, ElementName=MinimizeButton}"
                            Width="20"
                            Content="_"
                            Click="MinimizeButton_Click"
                            controlzEx:NonClientControlProperties.HitTestResult="MINBUTTON"
                            controlzEx:NonClientControlProperties.ClickStrategy="AutomationPeer" />
                    <Button Style="{StaticResource WindowTitleBarButton}"
                            IsEnabled="{Binding IsEnabled, ElementName=MaximizeButton}"
                            Content="[ ]"
                            Click="RestoreOrMaximizeButton_Click"
                            controlzEx:NonClientControlProperties.HitTestResult="MAXBUTTON"
                            controlzEx:NonClientControlProperties.ClickStrategy="MouseEvent" />
                    <Button Style="{StaticResource WindowTitleBarButton}"
                            Content="X"
                            Click="CloseButton_Click"
                            controlzEx:NonClientControlProperties.HitTestResult="CLOSE"
                            controlzEx:NonClientControlProperties.ClickStrategy="MouseEvent" />
                </UniformGrid>
            </Grid>

            <GridSplitter Grid.Row="1"
                          Height="8"
                          HorizontalAlignment="Stretch"
                          controlzEx:WindowChrome.IsHitTestVisibleInChrome="False"
                          controlzEx:NonClientControlProperties.HitTestResult="CLIENT"
                          Background="{DynamicResource ControlzEx.Brushes.AccentBaseColorBrush}" />

            <controlzEx:TabControlEx Grid.Row="2"
                                     x:Name="tabControlEx">
                <TabItem Header="WindowChrome">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <Grid Grid.IsSharedSizeScope="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Expander Grid.Row="0"
                                      Margin="5"
                                      Header="Actions"
                                      IsExpanded="True">
                                <WrapPanel Orientation="Horizontal">
                                    <Button x:Name="MinimizeButton"
                                            MinWidth="100"
                                            Margin="4"
                                            Padding="4"
                                            Click="ButtonMinimizeOnClick"
                                            Content="Minimize">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource {x:Type Button}}"
                                                   TargetType="{x:Type Button}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=Window, Path=ResizeMode}"
                                                                 Value="{x:Static ResizeMode.NoResize}">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button x:Name="MaximizeButton"
                                            MinWidth="100"
                                            Margin="4"
                                            Padding="4"
                                            Click="ButtonMaximizeOnClick"
                                            Content="Maximize">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource {x:Type Button}}"
                                                   TargetType="{x:Type Button}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=Window, Path=ResizeMode}"
                                                                 Value="{x:Static ResizeMode.NoResize}">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=Window, Path=ResizeMode}"
                                                                 Value="{x:Static ResizeMode.CanMinimize}">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button MinWidth="100"
                                            Margin="4"
                                            Padding="4"
                                            Click="ButtonRestoreOnClick"
                                            Content="Restore">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource {x:Type Button}}"
                                                   TargetType="{x:Type Button}">
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=Window, Path=WindowState}"
                                                                 Value="{x:Static WindowState.Maximized}">
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <Button MinWidth="100"
                                            Margin="4"
                                            Padding="4"
                                            Click="ButtonHideOnClick"
                                            Content="Hide" />
                                </WrapPanel>
                            </Expander>

                            <Expander Grid.Row="1"
                                      Margin="5"
                                      Header="Window tests (primarily for glows)"
                                      IsExpanded="True">
                                <StackPanel Orientation="Vertical">
                                    <WrapPanel Orientation="Horizontal">
                                        <CheckBox x:Name="SetOwner"
                                                  Margin="4"
                                                  Content="Set owner"
                                                  IsChecked="True" />
                                    </WrapPanel>

                                    <WrapPanel Orientation="Horizontal">
                                        <Button MinWidth="100"
                                                Margin="4"
                                                Padding="4"
                                                Click="ButtonOpenChildWindowOnClick"
                                                Content="Open child window" />

                                        <Button MinWidth="100"
                                                Margin="4"
                                                Padding="4"
                                                Click="ButtonOpenModalChildWindowOnClick"
                                                Content="Open modal child window" />

                                        <Button MinWidth="100"
                                                Margin="4"
                                                Padding="4"
                                                Click="ButtonOpenPseudoModalChildWindowOnClick"
                                                Content="Open pseudo modal child window" />

                                        <Button MinWidth="100"
                                                Margin="4"
                                                Padding="4"
                                                Click="ButtonSleepOnClick"
                                                Content="Sleep"
                                                ToolTip="Sleeps the current thread to simulate some workload and test this windows behavior" />
                                    </WrapPanel>
                                </StackPanel>
                            </Expander>

                            <Expander Grid.Row="2"
                                      Margin="5"
                                      Header="Misc"
                                      IsExpanded="True">
                                <WrapPanel Orientation="Horizontal">
                                    <Button MinWidth="100"
                                            Margin="4"
                                            Padding="4"
                                            Content="ToolTipAssist">
                                        <Button.ToolTip>
                                            <ToolTip controlzEx:ToolTipAssist.AutoMove="True">
                                                <ToolTip.Template>
                                                    <ControlTemplate>
                                                        <Grid>
                                                            <Border Background="Gray"
                                                                    BorderBrush="{DynamicResource BlackBrush}"
                                                                    BorderThickness="1"
                                                                    Opacity="0.9"
                                                                    SnapsToDevicePixels="True" />
                                                            <StackPanel Orientation="Vertical">
                                                                <TextBlock Margin="5"
                                                                           FontSize="22"
                                                                           Foreground="WhiteSmoke"
                                                                           Text="ToolTipHelper AutoMove sample"
                                                                           TextOptions.TextFormattingMode="Display"
                                                                           TextOptions.TextRenderingMode="ClearType" />
                                                                <Viewbox Width="64" Height="64">
                                                                    <Canvas Width="24" Height="24">
                                                                        <Path
                                                                            Data="M19,10C19,11.38 16.88,12.5 15.5,12.5C14.12,12.5 12.75,11.38 12.75,10H11.25C11.25,11.38 9.88,12.5 8.5,12.5C7.12,12.5 5,11.38 5,10H4.25C4.09,10.64 4,11.31 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12C20,11.31 19.91,10.64 19.75,10H19M12,4C9.04,4 6.45,5.61 5.07,8H18.93C17.55,5.61 14.96,4 12,4M22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2A10,10 0 0,1 22,12M12,17.23C10.25,17.23 8.71,16.5 7.81,15.42L9.23,14C9.68,14.72 10.75,15.23 12,15.23C13.25,15.23 14.32,14.72 14.77,14L16.19,15.42C15.29,16.5 13.75,17.23 12,17.23Z"
                                                                            Fill="DarkOrange" />
                                                                    </Canvas>
                                                                </Viewbox>
                                                            </StackPanel>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </ToolTip.Template>
                                            </ToolTip>
                                        </Button.ToolTip>
                                    </Button>
                                    <controlzEx:BadgedEx x:Name="BadgedButton"
                                                         Badge="{x:Static system:DateTime.Now}"
                                                         BadgeBackground="DodgerBlue"
                                                         BadgeForeground="White"
                                                         BadgeStringFormat="{}{0:ss}">
                                        <Button MinWidth="100"
                                                Margin="4"
                                                Padding="4"
                                                Click="BadgedButtonOnClick"
                                                Content="Badge" />
                                    </controlzEx:BadgedEx>
                                </WrapPanel>
                            </Expander>

                            <Expander Grid.Row="3"
                                      Margin="5"
                                      Header="Options (Window)"
                                      IsExpanded="True">
                                <local:UniformGridEx Columns="2"
                                                     ShowGridLines="True">
                                    <Label>
                                        Style
                                    </Label>
                                    <ComboBox Margin="4"
                                              VerticalAlignment="Center"
                                              ItemsSource="{Binding Source={StaticResource WindowStyleEnumValues}}"
                                              SelectedItem="{Binding ElementName=Window, Path=WindowStyle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <Label>
                                        ResizeMode
                                    </Label>
                                    <ComboBox Margin="4"
                                              VerticalAlignment="Center"
                                              ItemsSource="{Binding Source={StaticResource ResizeModeEnumValues}}"
                                              SelectedItem="{Binding ElementName=Window, Path=ResizeMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <Label>
                                        AllowsTransparency (next window)
                                    </Label>
                                    <CheckBox x:Name="chkAllowsTransparency"
                                              Margin="4"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding ElementName=Window, Path=AllowsTransparency, Mode=OneTime, UpdateSourceTrigger=PropertyChanged}" />

                                    <Label>
                                        Background
                                    </Label>
                                    <StackPanel Orientation="Horizontal">
                                        <Border Margin="4"
                                                Width="16"
                                                Height="16"
                                                BorderThickness="1"
                                                BorderBrush="{DynamicResource BlackBrush}"
                                                Background="{Binding ElementName=Window, Path=Background}" />
                                        <ComboBox x:Name="backgroundComboBox"
                                                  Margin="4"
                                                  MinWidth="100"
                                                  VerticalAlignment="Center"
                                                  HorizontalContentAlignment="Stretch"
                                                  IsEditable="True"
                                                  ItemsSource="{Binding Brushes, ElementName=Window}"
                                                  Text="{Binding ElementName=Window, Path=Background, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="0"
                                                                   Margin="4 0"
                                                                   Text="{Binding}" />
                                                        <Grid Grid.Column="1"
                                                              Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                                                              Margin="4 0"
                                                              VerticalAlignment="Stretch"
                                                              Background="{Binding}" />
                                                    </Grid>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>

                                        <Button Click="HandleClearBackgroundClick">Set NULL</Button>
                                        <Button Click="HandleTransparentBackgroundClick" Margin="4 0 0 0">Set transparent</Button>
                                    </StackPanel>

                                    <Label>
                                        BorderThickness
                                    </Label>
                                    <TextBox Margin="4"
                                             Padding="2"
                                             VerticalAlignment="Center"
                                             Text="{Binding ElementName=Window, Path=BorderThickness, Mode=TwoWay}" />

                                    <Label>
                                        BorderBrush
                                    </Label>
                                    <StackPanel Orientation="Horizontal">
                                        <Border Margin="4"
                                                Width="16" 
                                                Height="16"
                                                BorderThickness="1"
                                                BorderBrush="{DynamicResource BlackBrush}"
                                                Background="{Binding ElementName=Window, Path=BorderBrush}" />
                                        <ComboBox Margin="4"
                                                  MinWidth="100"
                                                  VerticalAlignment="Center"
                                                  HorizontalContentAlignment="Stretch"
                                                  IsEditable="True"
                                                  ItemsSource="{Binding Brushes, ElementName=Window}"
                                                  Text="{Binding ElementName=Window, Path=BorderBrush, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="0"
                                                                   Margin="4 0"
                                                                   Text="{Binding}" />
                                                        <Grid Grid.Column="1"
                                                              Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                                                              Margin="4 0"
                                                              VerticalAlignment="Stretch"
                                                              Background="{Binding}" />
                                                    </Grid>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </StackPanel>

                                    <Label>
                                        ShowInTaskbar
                                    </Label>
                                    <CheckBox Margin="4"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding ElementName=Window, Path=ShowInTaskbar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <Label>
                                        Topmost
                                    </Label>
                                    <CheckBox Margin="4"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding ElementName=Window, Path=Topmost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <Label>
                                        Caption color
                                    </Label>
                                    <StackPanel Orientation="Horizontal">
                                        <Border Margin="4"
                                                Width="16" 
                                                Height="16"
                                                BorderThickness="1"
                                                BorderBrush="{DynamicResource BlackBrush}">
                                            <Border.Background>
                                                <SolidColorBrush Color="{Binding ElementName=Window, Path=CaptionColor}" />
                                            </Border.Background>
                                        </Border>
                                        <ComboBox x:Name="captionColorComboBox"
                                                  Margin="4"
                                                  MinWidth="100"
                                                  VerticalAlignment="Center"
                                                  HorizontalContentAlignment="Stretch"
                                                  IsEditable="True"
                                                  ItemsSource="{Binding Colors, ElementName=Window}"
                                                  Text="{Binding ElementName=Window, Path=CaptionColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="0"
                                                                   Margin="4 0"
                                                                   Text="{Binding}" />
                                                        <Grid Grid.Column="1"
                                                              Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                                                              Margin="4 0"
                                                              VerticalAlignment="Stretch">
                                                            <Grid.Background>
                                                                <SolidColorBrush Color="{Binding}" />
                                                            </Grid.Background>
                                                        </Grid>
                                                    </Grid>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>

                                        <Button Click="HandleClearCaptionColorClick">Set NULL</Button>
                                        <Button Click="HandleTransparentCaptionColorClick" Margin="4 0 0 0">Set transparent</Button>
                                    </StackPanel>

                                    <Label>
                                        NCNonActiveBrush
                                    </Label>
                                    <StackPanel Orientation="Horizontal">
                                        <Border Margin="4"
                                                Width="16" 
                                                Height="16"
                                                BorderThickness="1"
                                                BorderBrush="{DynamicResource BlackBrush}"
                                                Background="{Binding ElementName=Window, Path=NCNonActiveBrush}" />
                                        <ComboBox x:Name="NCNonActiveBrushComboBox"
                                                  Margin="4"
                                                  MinWidth="100"
                                                  VerticalAlignment="Center"
                                                  HorizontalContentAlignment="Stretch"
                                                  IsEditable="True"
                                                  ItemsSource="{Binding Brushes, ElementName=Window}"
                                                  Text="{Binding ElementName=Window, Path=NCNonActiveBrush, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="0"
                                                                   Margin="4 0"
                                                                   Text="{Binding}" />
                                                        <Grid Grid.Column="1"
                                                              Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                                                              Margin="4 0"
                                                              VerticalAlignment="Stretch"
                                                              Background="{Binding}" />
                                                    </Grid>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>

                                        <Button Click="HandleClearNCNonActiveBrushClick">Set NULL</Button>
                                        <Button Click="HandleTransparentNCNonActiveBrushClick" Margin="4 0 0 0">Set transparent</Button>
                                    </StackPanel>

                                    <Label>
                                        UseNativeCaptionButtons
                                    </Label>
                                    <CheckBox Margin="4"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding ElementName=Window, Path=UseNativeCaptionButtons, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <Label>
                                        WindowBackDropType
                                    </Label>
                                    <ComboBox Margin="4"
                                              VerticalAlignment="Center"
                                              ItemsSource="{Binding Source={StaticResource WindowBackdropTypeEnumValues}}"
                                              SelectedItem="{Binding ElementName=Window, Path=(controlzEx:WindowBackdropManager.BackdropType), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <Label>
                                        CurrentWindowBackDropType
                                    </Label>
                                    <TextBlock Margin="4"
                                              VerticalAlignment="Center"
                                              Text="{Binding ElementName=Window, Path=(controlzEx:WindowBackdropManager.CurrentBackdropType)}" />
                                </local:UniformGridEx>
                            </Expander>

                            <Expander Grid.Row="4"
                                      Margin="5"
                                      Header="Options (WindowChromeBehavior)"
                                      IsExpanded="True">
                                <local:UniformGridEx Columns="2"
                                                     ShowGridLines="True">
                                    <Label>
                                        IgnoreTaskbarOnMaximize
                                    </Label>
                                    <CheckBox
                                        Margin="4"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding ElementName=Window, Path=IgnoreTaskbarOnMaximize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <Label>
                                        KeepBorderOnMaximize
                                    </Label>
                                    <CheckBox Margin="4"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding ElementName=Window, Path=KeepBorderOnMaximize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <Label>
                                        ResizeBorderThickness
                                    </Label>
                                    <TextBox Margin="4"
                                             Padding="2"
                                             VerticalAlignment="Center"
                                             Text="{Binding ElementName=Window, Path=ResizeBorderThickness, Mode=TwoWay}" />

                                    <Label>
                                        GlassFrameThickness
                                    </Label>
                                    <TextBox Margin="4"
                                             Padding="2"
                                             VerticalAlignment="Center"
                                             Text="{Binding ElementName=Window, Path=GlassFrameThickness, Mode=TwoWay}" />

                                    <Label>
                                        CornerPreference
                                    </Label>
                                    <ComboBox Margin="4"
                                              VerticalAlignment="Center"
                                              ItemsSource="{Binding Source={StaticResource CornerPreferenceEnumValues}}"
                                              SelectedItem="{Binding ElementName=Window, Path=CornerPreference, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <Label>
                                        EnableMinimize (Enable/Disable System Menu Item)
                                    </Label>
                                    <CheckBox Margin="4"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding ElementName=Window, Path=ShowMinButton, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <Label>
                                        EnableMaxRestore (Enable/Disable System Menu Item)
                                    </Label>
                                    <CheckBox Margin="4"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding ElementName=Window, Path=ShowMaxRestoreButton, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </local:UniformGridEx>
                            </Expander>

                            <Expander Grid.Row="5"
                                      Margin="5"
                                      Header="Options (GlowWindowBehavior)"
                                      IsExpanded="True">
                                <local:UniformGridEx Columns="2"
                                                     ShowGridLines="True">
                                    <Label>
                                        GlowColor
                                    </Label>
                                    <StackPanel Orientation="Horizontal">
                                        <Border Margin="4"
                                                Width="16" 
                                                Height="16"
                                                BorderThickness="1"
                                                BorderBrush="{DynamicResource BlackBrush}">
                                            <Border.Background>
                                                <SolidColorBrush Color="{Binding ElementName=Window, Path=GlowColor}" />
                                            </Border.Background>
                                        </Border>
                                        <ComboBox x:Name="glowColorComboBox"
                                                  Margin="4"
                                                  MinWidth="100"
                                                  VerticalAlignment="Center"
                                                  HorizontalContentAlignment="Stretch"
                                                  IsEditable="True"
                                                  ItemsSource="{Binding Colors, ElementName=Window}"
                                                  Text="{Binding ElementName=Window, Path=GlowColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="0"
                                                                   Margin="4 0"
                                                                   Text="{Binding}" />
                                                        <Grid Grid.Column="1"
                                                              Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                                                              Margin="4 0"
                                                              VerticalAlignment="Stretch">
                                                            <Grid.Background>
                                                                <SolidColorBrush Color="{Binding}" />
                                                            </Grid.Background>
                                                        </Grid>
                                                    </Grid>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>

                                        <Button Click="HandleClearGlowColorClick">Set NULL</Button>
                                    </StackPanel>

                                    <Label>
                                        NonActiveGlowColor
                                    </Label>
                                    <StackPanel Orientation="Horizontal">
                                        <Border Margin="4"
                                                Width="16" 
                                                Height="16"
                                                BorderThickness="1"
                                                BorderBrush="{DynamicResource BlackBrush}">
                                            <Border.Background>
                                                <SolidColorBrush Color="{Binding ElementName=Window, Path=NonActiveGlowColor}" />
                                            </Border.Background>
                                        </Border>
                                        <ComboBox x:Name="nonActiveGlowColorComboBox"
                                                  Margin="4"
                                                  MinWidth="100"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Stretch"
                                                  HorizontalContentAlignment="Stretch"
                                                  IsEditable="True"
                                                  ItemsSource="{Binding Colors, ElementName=Window}"
                                                  Text="{Binding ElementName=Window, Path=NonActiveGlowColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="0"
                                                                   Margin="4 0"
                                                                   Text="{Binding}" />
                                                        <Grid Grid.Column="1"
                                                              Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                                                              Margin="4 0"
                                                              VerticalAlignment="Stretch">
                                                            <Grid.Background>
                                                                <SolidColorBrush Color="{Binding}" />
                                                            </Grid.Background>
                                                        </Grid>
                                                    </Grid>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>

                                        <Button Click="HandleClearNonActiveGlowColorClick">Set NULL</Button>
                                    </StackPanel>

                                    <Label>
                                        GlowDepth
                                    </Label>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBox Margin="4"
                                                 Padding="2"
                                                 MinWidth="30"
                                                 VerticalAlignment="Center"
                                                 Text="{Binding ElementName=Window, Path=GlowDepth, Mode=TwoWay}" />
                                        <CheckBox Margin="4"
                                                  Padding="2"
                                                  VerticalAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Checked="AnimateGlowDepth_OnChecked"
                                                  Unchecked="AnimateGlowDepth_OnUnchecked">Animate</CheckBox>
                                    </StackPanel>

                                    <Label>
                                        IsGlowTransitionEnabled
                                    </Label>
                                    <CheckBox Margin="4"
                                              Padding="2"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding ElementName=Window, Path=IsGlowTransitionEnabled, Mode=TwoWay}" />

                                    <Label>
                                        UseRadialGradientForCorners
                                    </Label>
                                    <CheckBox Margin="4"
                                              Padding="2"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding ElementName=Window, Path=UseRadialGradientForCorners, Mode=TwoWay}" />

                                    <Label>
                                        PreferDWMBorderColor
                                    </Label>
                                    <CheckBox Margin="4"
                                              Padding="2"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding ElementName=Window, Path=PreferDWMBorderColor, Mode=TwoWay}" />
                                    
                                    <Label>
                                        DWMSupportsBorderColor
                                    </Label>
                                    <CheckBox Margin="4"
                                              Padding="2"
                                              VerticalAlignment="Center"
                                              IsEnabled="False"
                                              IsChecked="{Binding ElementName=Window, Path=DWMSupportsBorderColor, Mode=OneWay}" />
                                </local:UniformGridEx>
                            </Expander>

                            <Expander Grid.Row="6"
                                      Margin="5"
                                      Header="Current values"
                                      IsExpanded="True">
                                <local:UniformGridEx Columns="2"
                                                     ShowGridLines="True">
                                    <Label>
                                        Position
                                    </Label>
                                    <StackPanel Margin="4"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                        <TextBox MinWidth="35"
                                                 Margin="0 0 2 0"
                                                 Padding="2"
                                                 VerticalAlignment="Center"
                                                 IsReadOnly="True"
                                                 Text="{Binding ElementName=Window, Path=Left, Mode=OneWay}" />

                                        <TextBox MinWidth="35"
                                                 Margin="0 0 2 0"
                                                 Padding="2"
                                                 VerticalAlignment="Center"
                                                 IsReadOnly="True"
                                                 Text="{Binding ElementName=Window, Path=Top, Mode=OneWay}" />
                                    </StackPanel>

                                    <Label>
                                        Size
                                    </Label>
                                    <StackPanel Margin="4"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                        <TextBox MinWidth="35"
                                                 Margin="0 0 2 0"
                                                 Padding="2"
                                                 VerticalAlignment="Center"
                                                 IsReadOnly="True"
                                                 Text="{Binding ElementName=Window, Path=ActualWidth, Mode=OneWay}" />

                                        <TextBox MinWidth="35"
                                                 Margin="0 0 2 0"
                                                 Padding="2"
                                                 VerticalAlignment="Center"
                                                 IsReadOnly="True"
                                                 Text="{Binding ElementName=Window, Path=ActualHeight, Mode=OneWay}" />
                                    </StackPanel>

                                    <Label>
                                        MinSize
                                    </Label>
                                    <StackPanel Margin="4"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                        <TextBox MinWidth="35"
                                                 Margin="0 0 2 0"
                                                 Padding="2"
                                                 VerticalAlignment="Center"
                                                 Text="{Binding ElementName=Window, Path=MinWidth, Mode=TwoWay}" />

                                        <TextBox MinWidth="35"
                                                 Margin="0 0 2 0"
                                                 Padding="2"
                                                 VerticalAlignment="Center"
                                                 Text="{Binding ElementName=Window, Path=MinHeight, Mode=TwoWay}" />

                                        <Button Padding="4"
                                                Click="ButtonResetMinSizesOnClick"
                                                Content="Reset" />
                                    </StackPanel>

                                    <Label>
                                        MaxSize
                                    </Label>
                                    <StackPanel Margin="4"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                        <TextBox MinWidth="35"
                                                 Margin="0 0 2 0"
                                                 Padding="2"
                                                 VerticalAlignment="Center"
                                                 Text="{Binding ElementName=Window, Path=MaxWidth, Mode=TwoWay}" />

                                        <TextBox MinWidth="35"
                                                 Margin="0 0 2 0"
                                                 Padding="2"
                                                 VerticalAlignment="Center"
                                                 Text="{Binding ElementName=Window, Path=MaxHeight, Mode=TwoWay}" />

                                        <Button Padding="4"
                                                Click="ButtonResetMaxSizesOnClick"
                                                Content="Reset" />
                                    </StackPanel>

                                    <Label>
                                        Padding
                                    </Label>
                                    <StackPanel Margin="4"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                        <TextBox MinWidth="70"
                                                 Margin="0 0 2 0"
                                                 Padding="2"
                                                 VerticalAlignment="Center"
                                                 IsReadOnly="True"
                                                 Text="{Binding ElementName=Window, Path=Padding, Mode=OneWay}" />
                                    </StackPanel>

                                    <Label>
                                        CaptionButtonsSize
                                    </Label>
                                    <StackPanel Margin="4"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                        <TextBox MinWidth="70"
                                                 Margin="0 0 2 0"
                                                 Padding="2"
                                                 VerticalAlignment="Center"
                                                 IsReadOnly="True"
                                                 Text="{Binding ElementName=Window, Path=CaptionButtonsSize, Mode=OneWay}" />
                                    </StackPanel>

                                    <Label>
                                        Size (Content)
                                    </Label>
                                    <StackPanel Margin="4"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                        <TextBox MinWidth="35"
                                                 Margin="0 0 2 0"
                                                 Padding="2"
                                                 VerticalAlignment="Center"
                                                 IsReadOnly="True"
                                                 Text="{Binding ElementName=ContentGrid, Path=ActualWidth, Mode=OneWay}" />

                                        <TextBox MinWidth="35"
                                                 Margin="0 0 2 0"
                                                 Padding="2"
                                                 VerticalAlignment="Center"
                                                 IsReadOnly="True"
                                                 Text="{Binding ElementName=ContentGrid, Path=ActualHeight, Mode=OneWay}" />
                                    </StackPanel>

                                    <Label>
                                        IsActive
                                    </Label>
                                    <CheckBox Margin="4"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding ElementName=Window, Path=IsActive, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                              IsEnabled="False" />

                                    <Label>
                                        IsNCActive
                                    </Label>
                                    <CheckBox Margin="4"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding ElementName=Window, Path=IsNCActive, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                              IsEnabled="False" />
                                </local:UniformGridEx>
                            </Expander>
                        </Grid>
                    </ScrollViewer>
                </TabItem>

                <TabItem Header="TabControlEx">
                    <StackPanel>
                        <ComboBox ItemsSource="{Binding Source={StaticResource DockEnumValues}}"
                                  SelectedItem="{Binding ElementName=tabControlEx, Path=TabStripPlacement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <TextBox Margin="5"
                                 HorizontalAlignment="Center"
                                 Text="Lorem ipsum dolor sit amet, consetetur sadipscing" />
                        <TextBlock x:Name="LoadedCountTextBlock"
                                   Margin="5"
                                   HorizontalAlignment="Center"
                                   Loaded="LoadedCountTextBlock_OnLoaded"
                                   Unloaded="LoadedCountTextBlock_OnUnloaded" />
                    </StackPanel>
                </TabItem>

                <TabItem Header="TextBoxInputMaskBehavior">
                    <TabItem.Resources>
                        <system:String x:Key="InputMaskIban">&gt;LLaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa</system:String>
                    </TabItem.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0"
                                   Grid.Column="0"
                                   Margin="4"
                                   Text="Datetime" />
                        <TextBox Grid.Row="0"
                                 Grid.Column="1"
                                 Margin="4">
                            <behaviors:Interaction.Behaviors>
                                <controlzEx:TextBoxInputMaskBehavior InputMask="00/00/0000" />
                            </behaviors:Interaction.Behaviors>
                        </TextBox>

                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   Margin="4"
                                   Text="Phone Number" />
                        <TextBox Grid.Row="1"
                                 Grid.Column="1"
                                 Margin="4">
                            <behaviors:Interaction.Behaviors>
                                <controlzEx:TextBoxInputMaskBehavior InputMask="( 999 ) 000 000 - 00" PromptChar="_" />
                            </behaviors:Interaction.Behaviors>
                        </TextBox>

                        <TextBlock Grid.Row="2"
                                   Grid.Column="0"
                                   Margin="4"
                                   Text="Sepa - IBAN" />
                        <TextBox Grid.Row="2"
                                 Grid.Column="1"
                                 Margin="4">
                            <behaviors:Interaction.Behaviors>
                                <controlzEx:TextBoxInputMaskBehavior InputMask="{StaticResource InputMaskIban}"
                                                                     PromptChar="X" />
                            </behaviors:Interaction.Behaviors>
                        </TextBox>

                    </Grid>
                </TabItem>

                <TabItem Header="Theming">
                    <views:ThemingView />
                </TabItem>
            </controlzEx:TabControlEx>
        </Grid>
    </Grid>
</controlzEx:WindowChromeWindow>