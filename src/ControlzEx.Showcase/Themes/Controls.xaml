<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="AccessText">
        <Setter Property="OverridesDefaultStyle" Value="True" />
    </Style>

    <Style TargetType="Label">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource Control.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="OverridesDefaultStyle" Value="True" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}" />
    </Style>

    <Style TargetType="Expander">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush20}" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}" />
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{DynamicResource Control.Background}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <Border x:Name="Border"
                                Margin="0"
                                Padding="6"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,1,1,0">
                            <ContentPresenter x:Name="ContentSite"
                                              Margin="0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)"
                                            From="0.0"
                                            To="0.5"
                                            Duration="0:0:.16" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource ControlzEx.Brushes.AccentBaseColorBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource ControlzEx.Brushes.HighlightBrush}" />
                            <Setter TargetName="Border" Property="TextElement.Foreground"
                                    Value="{DynamicResource ControlzEx.Brushes.IdealForegroundColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" SourceName="Border" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource Control.MouseOver.Background}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource Control.MouseOver.Border}" />
                            <Setter TargetName="Border" Property="TextElement.Foreground"
                                    Value="{DynamicResource Control.MouseOver.Foreground}" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                    Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                    Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                    Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Thickness x:Key="ButtonPadding">11,5,11,6</Thickness>

    <Style x:Key="DefaultUiButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource Control.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Control.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ContentBorder"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            MinWidth="{TemplateBinding MinWidth}"
                            MinHeight="{TemplateBinding MinHeight}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Content}"
                                              TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background"
                                    Value="{DynamicResource Control.MouseOver.Background}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush"
                                    Value="{DynamicResource Control.MouseOver.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background"
                                    Value="{DynamicResource Control.Pressed.Background}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush"
                                    Value="{DynamicResource Control.Pressed.Border}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{DynamicResource Control.Pressed.Foreground}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background"
                                    Value="{DynamicResource Control.Disabled.Background}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush"
                                    Value="{DynamicResource Control.Disabled.Border}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{DynamicResource Control.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultComboBoxTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="CaretBrush" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Decorator x:Name="PART_ContentHost"
                               Margin="{TemplateBinding Padding}"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Stretch"
                               TextElement.Foreground="{TemplateBinding Foreground}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Border.CornerRadius" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="ContentBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <ContentPresenter x:Name="PART_ContentHost"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="3,2,3,0" />
        <Setter Property="Padding" Value="10,8,8,8" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Border x:Name="ContentBorder"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Margin}"
                                VerticalAlignment="Stretch"
                                CornerRadius="{TemplateBinding Border.CornerRadius}"
                                SnapsToDevicePixels="True">
                            <Grid>
                                <ContentPresenter x:Name="PART_ContentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="Center" />
                                <Rectangle x:Name="ActiveRectangle"
                                           Width="3"
                                           Height="16"
                                           Margin="0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Fill="{DynamicResource ControlzEx.Brushes.AccentBaseColorBrush}"
                                           RadiusX="2"
                                           RadiusY="2"
                                           Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ActiveRectangle" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentBorder" Property="Background"
                                    Value="{DynamicResource Control.MouseOver.Background}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush"
                                    Value="{DynamicResource Control.MouseOver.Border}" />
                            <Setter Property="Foreground" Value="{DynamicResource Control.MouseOver.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Control.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource Control.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Control.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Popup.PopupAnimation" Value="None" />
        <Setter Property="Popup.Placement" Value="Bottom" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border x:Name="ContentBorder"
                                Grid.Row="0"
                                MinWidth="{TemplateBinding MinWidth}"
                                MinHeight="{TemplateBinding MinHeight}"
                                Padding="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0" Margin="{TemplateBinding Padding}">
                                        <ContentPresenter x:Name="PART_ContentPresenter"
                                                          HorizontalAlignment="Stretch"
                                                          VerticalAlignment="Stretch"
                                                          Content="{TemplateBinding SelectionBoxItem}"
                                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                          IsHitTestVisible="False"
                                                          TextElement.Foreground="{TemplateBinding Foreground}" />
                                    </Grid>
                                    <Grid Grid.Column="1" Margin="8,0,10,0">
                                        <TextBlock x:Name="ChevronIcon"
                                                   Margin="0"
                                                   VerticalAlignment="Center"
                                                   FontSize="11"
                                                   RenderTransformOrigin="0.5, 0.5"
                                                   Text="&#x25BC;">
                                            <TextBlock.RenderTransform>
                                                <RotateTransform Angle="0" />
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                    </Grid>
                                    <Grid Grid.Column="0"
                                          Grid.ColumnSpan="2"
                                          Margin="0">
                                        <ToggleButton Name="ToggleButton"
                                                      HorizontalAlignment="Stretch"
                                                      VerticalAlignment="Stretch"
                                                      ClickMode="Press"
                                                      Focusable="False"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Style="{StaticResource DefaultComboBoxToggleButtonStyle}" />
                                    </Grid>
                                    <Grid Grid.Column="0" Margin="{TemplateBinding Padding}">
                                        <TextBox x:Name="PART_EditableTextBox"
                                                 HorizontalAlignment="Stretch"
                                                 VerticalAlignment="Stretch"
                                                 FontSize="{TemplateBinding FontSize}"
                                                 Foreground="{TemplateBinding Foreground}"
                                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                                 Style="{StaticResource DefaultComboBoxTextBoxStyle}" />
                                    </Grid>
                                </Grid>
                                <Popup x:Name="Popup"
                                       RenderOptions.ClearTypeHint="Enabled"
                                       TextOptions.TextFormattingMode="Display"
                                       MinWidth="{TemplateBinding ActualWidth}"
                                       VerticalAlignment="Center"
                                       AllowsTransparency="False"
                                       Focusable="False"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       Placement="{TemplateBinding Popup.Placement}"
                                       PopupAnimation="{TemplateBinding Popup.PopupAnimation}"
                                       VerticalOffset="1">
                                    <Border x:Name="DropDownBorder"
                                            Margin="0"
                                            Background="{DynamicResource Control.Background}"
                                            BorderBrush="{DynamicResource Control.Border}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="True">
                                        <Border.RenderTransform>
                                            <TranslateTransform />
                                        </Border.RenderTransform>
                                        <Grid>
                                            <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                          Margin="0"
                                                          SnapsToDevicePixels="True"
                                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                                          TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                          TextElement.Foreground="{TemplateBinding Foreground}">
                                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                                                TextElement.FontSize="{TemplateBinding FontSize}" />
                                            </ScrollViewer>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ChevronIcon"
                                            Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
                                            From="0"
                                            To="180"
                                            Duration="00:00:00.167" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="DropDownBorder"
                                            Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)"
                                            From="-90"
                                            To="0"
                                            Duration="00:00:00.167">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ChevronIcon"
                                            Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
                                            From="180"
                                            To="0"
                                            Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background"
                                    Value="{DynamicResource Control.MouseOver.Background}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background"
                                    Value="{DynamicResource Control.Disabled.Background}" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush"
                                    Value="{DynamicResource Control.Disabled.Border}" />
                            <Setter Property="Foreground" Value="{DynamicResource Control.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}" />
    <Style BasedOn="{StaticResource DefaultComboBoxStyle}" TargetType="{x:Type ComboBox}" />

    <Style BasedOn="{StaticResource DefaultUiButtonStyle}" TargetType="{x:Type Button}" />
</ResourceDictionary>